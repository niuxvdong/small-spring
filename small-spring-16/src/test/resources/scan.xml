<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	         http://www.springframework.org/schema/beans/spring-beans.xsd
		 http://www.springframework.org/schema/context
		 http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- a被代理 -->
    <bean id="a" class="cn.itnxd.springframework.bean.A">
        <property name="b" ref="b"/>
    </bean>

    <bean id="b" class="cn.itnxd.springframework.bean.B">
        <property name="a" ref="a"/>
    </bean>

    <!--添加 BeanPostProcessor 处理自动代理 -->
    <bean class="cn.itnxd.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <!--添加切点表达式和通知-->
    <bean id="pointcutAdvisor" class="cn.itnxd.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="expression" value="execution(* cn.itnxd.springframework.bean.A.fun(..))"/>
        <property name="advice" ref="methodInterceptor"/>
    </bean>

    <!--添加方法拦截器处理通知-->
    <bean id="methodInterceptor" class="cn.itnxd.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor">
        <property name="advice" ref="beforeAdvice"/>
    </bean>

    <!--代理 A 的方法前置通知-->
    <bean id="beforeAdvice" class="cn.itnxd.springframework.advice.ABeforeAdvice"/>

</beans>